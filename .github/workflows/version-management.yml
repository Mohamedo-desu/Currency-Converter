name: Version Management

on:
  push:
    tags:
      - "v*"

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previous_tag
        run: |
          # Get all tags sorted by version
          PREV_TAG=$(git tag --sort=-v:refname | sed -n '2p')
          echo "Previous tag: $PREV_TAG"
          echo "previous_tag=$PREV_TAG" >> $GITHUB_OUTPUT

          # Determine version type
          if [[ -z "$PREV_TAG" ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          else
            CURRENT_VERSION=${GITHUB_REF#refs/tags/v}
            PREV_VERSION=${PREV_TAG#v}
            IFS='.' read -r -a CURRENT <<< "$CURRENT_VERSION"
            IFS='.' read -r -a PREV <<< "$PREV_VERSION"
            
            if [[ "${CURRENT[0]}" -gt "${PREV[0]}" ]]; then
              echo "type=major" >> $GITHUB_OUTPUT
            elif [[ "${CURRENT[1]}" -gt "${PREV[1]}" ]]; then
              echo "type=minor" >> $GITHUB_OUTPUT
            else
              echo "type=patch" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Update backend version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          curl -X POST ${{ secrets.BACKEND_URL }}/api/version \
            -H "Content-Type: application/json" \
            -d "{
              \"version\": \"$VERSION\",
              \"type\": \"${{ steps.previous_tag.outputs.type }}\",
              \"releaseNotes\": \"Version $VERSION\"
            }"

  update:
    needs: version-check
    if: needs.version-check.outputs.type == 'minor' || needs.version-check.outputs.type == 'patch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [preview, production]
    steps:
      - uses: actions/checkout@v4
      - uses: expo/expo-github-action@v7
        with:
          expo-version: latest
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Install EAS CLI
        run: npm install -g eas-cli
      - name: Create OTA Update
        run: eas update --branch ${{ matrix.profile }} --message "Version ${GITHUB_REF#refs/tags/v}" --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  build:
    needs: version-check
    if: needs.version-check.outputs.type == 'major'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [preview, production]
    steps:
      - uses: actions/checkout@v4
      - uses: expo/expo-github-action@v7
        with:
          expo-version: latest
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Install EAS CLI
        run: npm install -g eas-cli
      - name: Trigger EAS Build
        run: eas build --platform android --profile ${{ matrix.profile }} --non-interactive --no-wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
